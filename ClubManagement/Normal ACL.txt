CREATE TABLE clubs
(
club_id number(3) NOT NULL,
club_name varchar2(100) NOT NULL UNIQUE,
CONSTRAINT clubs_pk PRIMARY KEY (club_id)
);

CREATE SEQUENCE clubs_seq
MINVALUE 1
MAXVALUE 999
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE TRIGGER clubs_trigger
BEFORE INSERT ON clubs
FOR EACH ROW
 WHEN (new.club_id IS NULL) 
BEGIN
  SELECT clubs_seq.NEXTVAL 
  INTO :new.club_id
  FROM dual;
END;
/

INSERT INTO clubs (club_name) values('AIUB Computer Club');
INSERT INTO clubs (club_name) values('AIUB Shomoy Club');
INSERT INTO clubs (club_name) values('AIUB Oratory Club');

CREATE OR REPLACE PROCEDURE insertClubs(
a IN clubs.club_name%type)
IS
BEGIN
INSERT INTO clubs (club_name) VALUES (a);
COMMIT;
END;

BEGIN 
   insertClubs('AIUB Drama Club');
END; 
/

=======================================================================

CREATE TABLE profiles
(
profile_id number(10) NOT NULL,
profile_name varchar2(200) NOT NULL,
profile_email varchar2(150) NOT NULL UNIQUE,
profile_phone varchar2(15) NOT NULL UNIQUE,
profile_address varchar2(200) NOT NULL,
profile_department varchar2(20),
profile_dob varchar2(15) NOT NULL,
profile_bloodgroup varchar2(5) NOT NULL,
profile_joined DATE NOT NULL,
CONSTRAINT chk_profile_bloodgroup CHECK (profile_bloodgroup in ('A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-')),
CONSTRAINT profiles_pk PRIMARY KEY (profile_id)
);

CREATE SEQUENCE profiles_seq
MINVALUE 1
MAXVALUE 9999999999
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE TRIGGER profile_trigger
BEFORE INSERT ON profiles
FOR EACH ROW
 WHEN (new.profile_id IS NULL) 
BEGIN
  SELECT profiles_seq.NEXTVAL 
  INTO :new.profile_id
  FROM dual;
END;
/

INSERT INTO profiles (profile_name, profile_email, profile_phone, profile_address, profile_department, profile_dob, profile_bloodgroup, profile_joined) values('Md Anisur Rahman', 'anistuhin@gmail.com', '01843633243', 'Uttara, Dhaka', 'CSSE', '1994/10/20', 'A+', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.')); 
INSERT INTO profiles (profile_name, profile_email, profile_phone, profile_address, profile_department, profile_dob, profile_bloodgroup, profile_joined) values('Md Ferdous Akhter', 'anistuhi@gmail.com', '01843633244', 'Uttara, Dhaka', 'CSSE', '1994/10/20', 'A+', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.')); 
INSERT INTO profiles (profile_name, profile_email, profile_phone, profile_address, profile_department, profile_dob, profile_bloodgroup, profile_joined) values('Abdullah Al Faruque Shojol', 'anistuh@gmail.com', '01843633245', 'Uttara, Dhaka', 'CSSE', '1994/10/20', 'A+', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.')); 
INSERT INTO profiles (profile_name, profile_email, profile_phone, profile_address, profile_department, profile_dob, profile_bloodgroup, profile_joined) values('Md Ibrahim Khalil', 'anistu@gmail.com', '01843633246', 'Uttara, Dhaka', 'CSSE', '1994/10/20', 'A+', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.')); 

CREATE OR REPLACE PROCEDURE insertProfiles(
a IN profiles.profile_name%type,
b IN profiles.profile_email%type,
c IN profiles.profile_phone%type,
d IN profiles.profile_address%type,
e IN profiles.profile_department%type,
f IN profiles.profile_dob%type,
g IN profiles.profile_bloodgroup%type,
h IN profiles.profile_joined%type)
IS
BEGIN
INSERT INTO profiles (profile_name, profile_email, profile_phone, profile_address, profile_department, profile_dob, profile_bloodgroup, profile_joined) VALUES (a, b, c, d, e, f, g, h);
COMMIT;
END;

BEGIN 
   insertProfiles('Mr Admin', 'admin@gmail.com', '01843633253', 'Uttara, Dhaka', 'CSSE', '1994/10/20', 'A+', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.'));
END; 
/

========================================================================

CREATE TABLE users
(
user_id number(10) NOT NULL,
user_name varchar2(100) NOT NULL UNIQUE,
user_pass varchar2(200) NOT NULL,
user_type number(2) NOT NULL,
user_profile number(10) NOT NULL UNIQUE,
CONSTRAINT users_pk PRIMARY KEY (user_id),
CONSTRAINT users_fk  FOREIGN KEY (user_profile)  REFERENCES profiles(profile_id)
);

***User Type ["1 = Super Admin", "2 = Admin", "3 = President", "4 = Executive Member", "5 = General Member"]

CREATE SEQUENCE users_seq
MINVALUE 1
MAXVALUE 9999999999
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE TRIGGER users_trigger
BEFORE INSERT ON users
FOR EACH ROW
 WHEN (new.user_id IS NULL) 
BEGIN
  SELECT users_seq.NEXTVAL 
  INTO :new.user_id
  FROM dual;
END;
/

INSERT INTO users (user_name, user_pass, user_type, user_profile) values('13-24915-3', '1', 5, 1);
INSERT INTO users (user_name, user_pass, user_type, user_profile) values('13-25085-3', '1', 5, 5); 
INSERT INTO users (user_name, user_pass, user_type, user_profile) values('13-25111-3', '1', 3, 4); 

CREATE OR REPLACE PROCEDURE insertUsers(
a IN users.user_name%type,
b IN users.user_pass%type,
c IN users.user_type%type,
d IN users.user_profile%type)

IS
BEGIN
INSERT INTO users (user_name, user_pass, user_type, user_profile) VALUES (a, b, c, d);
COMMIT;
END;

BEGIN 
   insertUsers('14-26478-2', '1', 4, 3);
END; 
/

============================================================================================


CREATE TABLE events
(
event_id number(38) NOT NULL,
event_name varchar2(200) NOT NULL UNIQUE,
event_description varchar2(2000) NOT NULL,
event_budget number(15) NOT NULL,
event_approved varchar2(150) NOT NULL,
event_date DATE NOT NULL,
event_club number(3) NOT NULL,
CONSTRAINT events_pk PRIMARY KEY (event_id),
CONSTRAINT event_club_fk  FOREIGN KEY (event_club)  REFERENCES clubs(club_id)
);

CREATE SEQUENCE events_seq
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE TRIGGER events_trigger
BEFORE INSERT ON events
FOR EACH ROW
 WHEN (new.event_id IS NULL) 
BEGIN
  SELECT events_seq.NEXTVAL 
  INTO :new.event_id
  FROM dual;
END;
/

INSERT INTO events (event_name, event_description, event_budget, event_approved, event_date, event_club) values('Test 1', 'Test description 1', 5000, 'Saef Ullah Miah', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.', 1));
INSERT INTO events (event_name, event_description, event_budget, event_approved, event_date, event_club) values('Test 2', 'Test description 2', 7000, 'Saef Ullah', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.'), 1); 
INSERT INTO events (event_name, event_description, event_budget, event_approved, event_date, event_club) values('Test 3', 'Test description 3', 15000, 'Saef', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.'), 1); 

CREATE OR REPLACE PROCEDURE insertEvents(
a IN events.event_name%type,
b IN events.event_description%type,
c IN events.event_budget%type,
d IN events.event_approved%type,
e IN events.event_date%type,
f IN events.event_club%type)

IS
BEGIN
INSERT INTO events (event_name, event_description, event_budget, event_approved, event_date, event_club) VALUES (a, b, c, d, e, f);
COMMIT;
END;

BEGIN 
   insertEvents('Test 4', 'Test description 4', 1000, 'Test Approver', TO_DATE('01-MAY-2016 04:52 P.M.','DD-MON-YYYY HH:MI A.M.'), 1);
END; 
/

=======================================================================================================

CREATE TABLE members
(
member_id number(10) NOT NULL UNIQUE,
member_requested varchar2(150) NOT NULL,
member_approved varchar2(150) NOT NULL,
member_type number(2) NOT NULL,
member_club number(3) NOT NULL,
member_profile number(10) NOT NULL,
CONSTRAINT members_pk PRIMARY KEY (member_profile, member_club, member_type),
CONSTRAINT members_profile_fk  FOREIGN KEY (member_profile)  REFERENCES profiles(profile_id),
CONSTRAINT members_club_fk  FOREIGN KEY (member_club)  REFERENCES clubs(club_id)
);

CREATE SEQUENCE members_seq
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE TRIGGER members_trigger
BEFORE INSERT ON members
FOR EACH ROW
 WHEN (new.member_id IS NULL) 
BEGIN
  SELECT members_seq.NEXTVAL 
  INTO :new.member_id
  FROM dual;
END;
/

INSERT INTO members (member_requested, member_approved, member_type, member_club, member_profile) values('Md Remo', 'Saef Ullah Miah', 5, 1, 1);
INSERT INTO members (member_requested, member_approved, member_type, member_club, member_profile) values('Md Remo', 'Saef Ullah Miah', 5, 1, 5); 
INSERT INTO members (member_requested, member_approved, member_type, member_club, member_profile) values('Md Remo', 'Saef Ullah Miah', 3, 1, 4); 

CREATE OR REPLACE PROCEDURE insertMembers(
a IN members.member_requested%type,
b IN members.member_approved%type,
c IN members.member_type%type,
d IN members.member_club%type,
e IN members.member_profile%type)

IS
BEGIN
INSERT INTO members (member_requested, member_approved, member_type, member_club, member_profile) VALUES (a, b, c, d, e);
COMMIT;
END;

BEGIN 
   insertMembers('Md Remo', 'Saef Ullah Miah', 4, 1, 3);
END; 
/

=====================================================================================================================

CREATE TABLE volunteers
(
volunteer_id number(38) NOT NULL UNIQUE,
volunteer_event number(38) NOT NULL,
volunteer_club number(3) NOT NULL,
volunteer_profile number(10) NOT NULL,
CONSTRAINT volunteers_pk PRIMARY KEY (volunteer_profile, volunteer_club, volunteer_event),
CONSTRAINT volunteers_profile_fk  FOREIGN KEY (volunteer_profile)  REFERENCES profiles(profile_id),
CONSTRAINT volunteers_club_fk  FOREIGN KEY (volunteer_club)  REFERENCES clubs(club_id),
CONSTRAINT volunteers_event_fk  FOREIGN KEY (volunteer_event)  REFERENCES events(event_id)
);

CREATE SEQUENCE volunteers_seq
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE TRIGGER volunteers_trigger
BEFORE INSERT ON volunteers
FOR EACH ROW
 WHEN (new.volunteer_id IS NULL) 
BEGIN
  SELECT volunteers_seq.NEXTVAL 
  INTO :new.volunteer_id
  FROM dual;
END;
/

INSERT INTO volunteers (volunteer_event, volunteer_club, volunteer_profile) values(1, 1, 1);
INSERT INTO volunteers (volunteer_event, volunteer_club, volunteer_profile) values(2, 1, 5); 
INSERT INTO volunteers (volunteer_event, volunteer_club, volunteer_profile) values(3, 1, 4); 

CREATE OR REPLACE PROCEDURE insertVolunteers(
a IN volunteers.volunteer_event%type,
b IN volunteers.volunteer_club%type,
c IN volunteers.volunteer_profile%type)

IS
BEGIN
INSERT INTO volunteers (volunteer_event, volunteer_club, volunteer_profile) VALUES (a, b, c);
COMMIT;
END;


BEGIN 
   insertVolunteers(4, 1, 3);
END; 
/

==========================================================================================

Tue Oct 18 12:18:47 2016   Router0   Router>en
Tue Oct 18 12:18:51 2016   Router0   Router#conf t
Tue Oct 18 12:21:30 2016   Router0   Router(config)#access-list 1 deny HOst 192.168.0.2
Tue Oct 18 12:22:36 2016   Router0   Router(config)#exit
Tue Oct 18 12:24:20 2016   Router0   Router#conf t
Tue Oct 18 12:24:23 2016   Router0   Router(config)#int f0/0
Tue Oct 18 12:24:36 2016   Router0   Router(config-if)#ip access-group 1 in
Tue Oct 18 12:24:40 2016   Router0   Router(config-if)#exit
